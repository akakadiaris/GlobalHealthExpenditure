---
title: "Trends in Global Health Spending"
editor: visual
---

```{r}
library(readr)

data <- read_csv("data.csv")

```


```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)

# Convert 'year' to a factor to ensure proper ordering on the x-axis
data$year <- as.factor(data$year)

# Specify the specific values of location_name you want to include in the plot
selected_locations <- c("Central Europe, Eastern Europe, and Central Asia", 
                        "Latin America and Caribbean", 
                        "North Africa and Middle East", 
                        "South Asia", 
                        "Southeast Asia, East Asia, and Oceania",
                        "Sub-Saharan Africa")

# Filter the dataframe based on the selected location names
filtered_df <- data %>% 
  filter(location_name %in% selected_locations) %>%
  select(year, location_name, ghes_per_cap_mean, ppp_per_cap_mean, oop_per_cap_mean) %>%
  gather(key = "variable", value = "value", -year, -location_name)

# Ensure that the 'value' column is numeric
filtered_df <- filtered_df %>% mutate(value = as.numeric(value))

# Plot: Health Expenditure Over Time for specific columns with facets and scaled y-axis
ggplot_object <- ggplot(filtered_df, aes(x = year, y = value, 
                                         group = interaction(variable, location_name),
                                         color = variable,
                                         text = paste("Location: ", location_name, "<br>",
                                                      "Year: ", year, "<br>",
                                                      "Variable: ", variable, "<br>",
                                                      "Value: ", value))) +
  geom_line(size = 1) +
  geom_point(size = 1) +
  ggtitle("Domestic Financing Health Expenditure Over Time") +
  xlab("Year") +
  ylab(" Health Spending Per Person") +
  facet_grid(location_name ~ ., scales = "free_y") +  # Facet based on location
  theme_minimal() +
  theme(strip.text.y = element_text(angle = 0, hjust = 1), axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_color_brewer(palette = "Paired")  # Use scale_color_brewer for lines

# Convert ggplot to Plotly
plotly_object <- ggplotly(ggplot_object)

# Manually set legend position to bottom
plotly_object <- plotly_object %>% 
  layout(legend = list(orientation = "h", x = 0.5, y = -0.1))

# Show the Plotly object
print(plotly_object)
```

Based on this graph, we can observe that in general, Government Health spending has increased grater than other financing source from 1995 to 2019. Also, in all grouping of countries provided in the data, Prepaid Private Health Spending is the lowest spending out of all the financing sources. In Central Europe, Eastern Europe, and Central Asia, it seems that all financing sources increased. That being said, Government Health Spending and Out Of Pocket Health Spending increased significantly more than Prepaid Private Health Spending. In Latin American and Caribbean countries, it seemst that all three spending increased. That being said, while Out of Pocket spending increased until 2009, then it started decreasing, but overall through the years it has increased from 1995 to 2019. Similarly to Latin American and Caribbean countries, overall in North African and Middle East countries, the out of pocket spending was slowly increased but then there was a dip in spending in 2012 and 2013 and then started increasing again. Unlike every other grouping of countries, South Asian countries top financing source was Out of Pocket, and while increasing 1995 to 2015, started slowly slowly decreasing after 2015.



```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)

# Convert 'year' to a factor to ensure proper ordering on the x-axis
data$year <- as.factor(data$year)

# Specify the specific values of location_name you want to include in the plot
selected_locations <- c("Central Europe, Eastern Europe, and Central Asia", 
                        "Latin America and Caribbean", 
                        "North Africa and Middle East", 
                        "South Asia", 
                        "Southeast Asia, East Asia, and Oceania",
                        "Sub-Saharan Africa")

# Filter the dataframe based on the selected location names
filtered_df <- data %>% 
  filter(location_name %in% selected_locations) %>%
  select(year, location_name, ghes_per_cap_mean, ppp_per_cap_mean, oop_per_cap_mean) %>%
  gather(key = "variable", value = "value", -year, -location_name)

# Ensure that the 'value' column is numeric
filtered_df <- filtered_df %>% mutate(value = as.numeric(value))

# Plot: Health Expenditure Over Time for specific columns with facets
ggplot_object <- ggplot(filtered_df, aes(x = year, y = value, 
                                         group = interaction(location_name, variable),
                                         color = location_name,
                                         text = paste("Location: ", location_name, "<br>",
                                                      "Year: ", year, "<br>",
                                                      "Variable: ", variable, "<br>",
                                                      "Value: ", value))) +
  geom_line(size = 1) +
  geom_point(size = 1) +
  ggtitle("Domestic Financing Health Expenditure Over Time") +
  xlab("Year") +
  ylab("Health Expenditure per Person") +
  facet_grid(variable ~ ., scales = "free_y") +  # Facet based on variable
  theme_minimal() +
  theme(strip.text.y = element_text(angle = 0, hjust = 1),axis.text.x = element_text(angle = 45, hjust = 1))+
  scale_color_brewer(palette = "Paired") 

# Convert ggplot to Plotly
plotly_object <- ggplotly(ggplot_object)

# Manually set legend position to bottom
plotly_object <- plotly_object %>% 
  layout(legend = list(orientation = "h", x = 0.5, y = -0.1))

# Show the Plotly object
print(plotly_object)
```

From this graph, the most important aspect that you can observe is that, for all financing types, the countries grouping that had the lowest spending were Sub-Saharan Africa, and South Asia. In addition, it seems much of the time, Latin America and Caribbean had the highest or one of the highest spending in each type. Also, the greatest increase in Government Health Spending and Oout of Pocket financing was in Southeast Asian, East Asia, and Ocenia countries. 

```{r}
# Load necessary libraries
library(plotly)
library(dplyr)
library(tidyr)

# Specify the specific values of location_name you want to include in the plot
selected_locations <- c("Central Europe, Eastern Europe, and Central Asia", 
                        "Latin America and Caribbean", 
                        "North Africa and Middle East", 
                        "South Asia", 
                        "Southeast Asia, East Asia, and Oceania",
                        "Sub-Saharan Africa")

# Assuming your data frame is named 'data'
# Convert 'year' to a factor to ensure proper ordering on the x-axis
data$year <- as.factor(data$year)

# Filter the data for the selected locations
filtered_data <- data %>%
  filter(location_name %in% selected_locations)

# Create a Plotly plot
plot_ly(filtered_data, x = ~year, y = ~the_per_cap_mean, color = ~location_name, type = 'scatter', mode = 'lines+markers') %>%
  layout(
    title = "The Total Mean Health Expenditure Over Time Per Person",
    xaxis = list(title = "Year"),
    yaxis = list(title = "Health Expenditure Per Person"),
    legend = list(orientation = "h", x = 0.5, y = -0.2)
  ) %>%
  colorbar(title = "Location")
```

Based on the previous graphs, we saw that South Asia and Sub-Saharan Africa countries seem to spend significantly less per person on health spending, which is also what is observed in this graph, in terms of total health expenditure per person. It seems that there was also not a sigificant increase in spending over time for those two groups of countries. Based on this graph, it can also be observed that the two largest increase in total health spending is in Southeast Asian, East Asian, and Oceanian countries and Central European, Eastern European, and Central Asian countries. 


```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)

selected_continents <- c("Africa", "Asia", "Europe", "North America", "Oceania", "South America") 

# Calculate the mean values for each variable within each continent and year
mean_data <- data %>%
  group_by(continent, year) %>%
  filter(continent %in% selected_continents) %>%
  summarize(ghes_total_mean = mean(ghes_per_cap_mean, na.rm = TRUE),
            ppp_total_mean = mean(ppp_per_cap_mean, na.rm = TRUE),
            oop_total_mean = mean(oop_per_cap_mean, na.rm = TRUE))

# Reshape the data for plotting
filtered_data <- mean_data %>%
  gather(key = "variable", value = "value", -continent, -year)

# Ensure that the 'value' column is numeric
filtered_data <- filtered_data %>% mutate(value = as.numeric(value))

# Create a stacked bar chart
ggplot_object <- ggplot(filtered_data, aes(x = year, y = value, fill = variable)) +
  geom_bar(stat = "identity", position = "stack") +
  ggtitle("Mean Health Spending by Continent and Year") +
  xlab("Year") +
  ylab("Mean Health Spending") +
  facet_wrap(~continent, scales = "free_y", ncol = 2) +
  scale_fill_brewer(palette = "Set3") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  theme_minimal()

# Convert ggplot to Plotly
plotly_object <- ggplotly(ggplot_object)

# Manually set legend position to bottom
plotly_object <- plotly_object %>% 
  layout(legend = list(orientation = "h", x = 0.5, y = -0.1))
         #xaxis = list(tickangle = 135),)

# Show the Plotly object
print(plotly_object)

```

We then analyzed all the country data and grouped them within continent. There are many takeaways from this graph. It seems for each continent, no matter what year, the majority of the health spending is coming from the Government. Also based on these graphs, that you can see the spending amount is drastically different. The continents with the highest spending includes Europe, North America and Oceania while Africa's health spending is almost half of that. 


```{r}
#TRYING TO REMOVE OUTLIERS

# Load necessary libraries
library(dplyr)
library(tidyr)
library(plotly)

# Assuming your data frame is named 'data'
# Convert 'year' to a factor to ensure proper ordering on the x-axis
data$year <- as.factor(data$year)

# Specify the selected continents
selected_continents <- c("Africa", "Asia", "Europe", "North America", "Oceania", "South America")

# Filter data for selected continents
filtered_data <- data %>%
  filter(continent %in% selected_continents)

# Create a boxplot for the distribution of health spending by continent for each year using Plotly
plotly_object <- ggplot(filtered_data, aes(x = continent, y = the_per_cap_ppp_mean, fill = continent)) +
  geom_boxplot() +
  ggtitle("Distribution of Health Spending Per Person by Continent for Each Year") +
  xlab("Continent") +
  ylab("Health Spending") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set3")

# Convert ggplot to Plotly
plotly_object <- ggplotly(plotly_object, 
                           tooltip = c("y", "fill"),  # Add tooltips for y-axis values and fill (continent)
                           dynamicTicks = TRUE)  # Enable dynamic ticks

# Exclude outliers in the boxplot
plotly_object$data[[1]]$boxpoints <- "outliers"  # Change to "outliers" to include outliers

# Manually set legend position to bottom
plotly_object <- plotly_object %>% 
  layout(legend = list(orientation = "h", x = 0.5, y = -0.1))

# Show the Plotly object
print(plotly_object)
```

Based on these boxplots, it can be shown that North America, Oceania, Asia, and Africa have a significant amount of outliers. That means that there are many countries within these continents that have a high total health spending per person compared to the rest of the group. 

```{r}
# Load necessary libraries
library(dplyr)
library(ggplot2)

# Assuming your data frame is named 'data'
# Convert 'year' to a factor to ensure proper ordering on the x-axis
# data$year <- as.factor(data$year)

# Filter data for the year 2019, remove rows with missing the_total_mean, and exclude "Unknown" continent
filtered_data <- data %>%
  filter(year == 2019, !is.na(the_total_mean), continent != "Unknown")

# Check if there are valid faceting variables
valid_faceting <- filtered_data %>%
  group_by(continent) %>%
  summarise(n = n()) %>%
  filter(n > 0)

# If there are valid faceting variables, create the bar graph with facet_wrap
ggplot(filtered_data, aes(x = the_per_cap_ppp_mean, y = location_name, fill = continent)) +
  geom_col(position = "dodge") +
  ggtitle("Total Mean Health Spending by Country in 2019") +
  ylab("Country") +
  xlab("Total Mean Health Spending") +
  facet_wrap(~continent, scales = "free") +  # Adjust facet_wrap for horizontal bar graph
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 0, hjust = 1))  # Adjust axis text for better readability

print(ggplot)
```



```{r}
# Load necessary libraries
library(dplyr)
library(ggplot2)

# Assuming your data frame is named 'data'
# Convert 'year' to a factor to ensure proper ordering on the x-axis
# data$year <- as.factor(data$year)

# Filter data for the year 2019, remove rows with missing the_total_mean, and exclude "Unknown" continent
filtered_data <- data %>%
  filter(year == 2019, !is.na(the_per_gdp_mean), continent != "Unknown")

# Check if there are valid faceting variables
valid_faceting <- filtered_data %>%
  group_by(continent) %>%
  summarise(n = n()) %>%
  filter(n > 0)

# If there are valid faceting variables, create the bar graph with facet_wrap
bar_plot <- ggplot(filtered_data, aes(x = the_per_gdp_mean, y = location_name, fill = continent)) +
  geom_col(position = "dodge") +
  ggtitle("Total Mean Health Spending by Country in 2019") +
  ylab("Country") +
  xlab("Total Mean Health Spending per GDP") +
  facet_wrap(~continent, scales = "free") +  # Adjust facet_wrap for horizontal bar graph
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 0, hjust = 1))  # Adjust axis text for better readability

# Print the ggplot object
print(bar_plot)
```

```{r}
# Assuming your data frame is named 'data'
# Filter data for the year 2019 and remove rows with missing values
filtered_data <- data %>%
  filter(year == 2019, !is.na(ghes_total_mean), !is.na(ppp_total_mean), !is.na(oop_total_mean), continent != "Unknown")

# Reshape the data for parallel coordinate plot
melted_data <- filtered_data %>%
  select(location_name, ghes_per_cap_mean, ppp_per_cap_mean, oop_per_cap_mean, the_per_cap_mean, continent)

# Load necessary libraries
library(GGally)

# Create a parallel coordinates plot
plot <- GGally::ggparcoord(
  melted_data,
  columns = 2:5,
  groupColumn = "continent",
  scale = "globalminmax",
  showPoints = FALSE,
  alphaLines = 0.5
)
# Customize the plot further if needed (e.g., add color)
plot + scale_color_brewer(palette = "Set3") +
  labs(title = "Parallel Coordinates Plot",
       x = "Health Spending Components")
       #y = "Countries")

```

Based on this parallel coordinates plot, there are some observations you can make. It seems that in general, the value of Government Helath spending is varied. That is not the case for Private Health Spending and Out Of Pocket Health spending; despite some outliers, it seems that the money spent does not vary that much for those categories. Lastly, as we have seen in previous visualizations, the dispersion for total health spending is wide. 


```{r}
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(RColorBrewer)
library(forcats)
```


```{r}
# Retrieve data
health_spending_1995_2019 <- read_csv("data.csv")
```

```{r}
# Filter dataset on continents
selected_regions <- c(
  "Central Europe, Eastern Europe, and Central Asia",
  "Latin America and Caribbean",
  "North Africa and Middle East",
  "South Asia",
  "Southeast Asia, East Asia, and Oceania",
  "Sub-Saharan Africa", 
  "High income",
  "Low income",
  "Lower-middle income",
  "Upper-middle income",
  "High-income"
)

continents_1995_2019 <- health_spending_1995_2019 %>% filter(location_name %in% selected_regions)
```

```{r}
# pivot_longer stuff
continents_2019 <- continents_1995_2019 %>%
  filter(year == 2019)

# Make the values numeric
continents_2019 <- continents_2019 %>%
  mutate_at(vars('the_per_cap_mean', 'ghes_per_cap_mean', 'oop_per_cap_mean', 'ppp_per_cap_mean'), as.numeric) %>%
  select(location_name, location_id, 'the_per_cap_mean', 'ghes_per_cap_mean', 'oop_per_cap_mean', 'ppp_per_cap_mean')

# Print the first few rows of the filtered data
head(continents_2019)

new_data <- continents_2019 %>%
   pivot_longer(cols = c('the_per_cap_mean', 'ghes_per_cap_mean', 'oop_per_cap_mean', 'ppp_per_cap_mean'), names_to = "Spending_Source", values_to = "Health_Expenditure")
```


```{r, fig.height=8, fig.width=12}
# Filter only on continents
desired_locations <- c(
  "Central Europe, Eastern Europe, and Central Asia",
  "Latin America and Caribbean",
  "North Africa and Middle East",
  "South Asia",
  "Southeast Asia, East Asia, and Oceania",
  "Sub-Saharan Africa"
)

# Filter new_data based on location_name
filtered_data <- new_data %>% 
  filter(location_name %in% desired_locations)

# Visualization 2019 health spending per continent
ggplot(data = filtered_data, mapping = aes(x = Spending_Source, y = Health_Expenditure, fill = Spending_Source)) +
  geom_col(position = "dodge") +
  facet_wrap(~ location_name) +
  labs(title = "Health Spending by Financing Source in 2019",
       subtitle = "Per Continent",
       x = "Spending Source", 
       y = "Health Expenditure", 
       fill = "Spending Source") +
  theme(axis.text.x = element_blank()) +
  scale_fill_brewer(palette = "Set3")
```

```{r, fig.height=8, fig.width=12}
# Visualization 2019 health spending per low-middle-high income country
# Filter only on continents
desired_locations <- c(
  "Low income",
  "Lower-middle income",
  "Upper-middle income",
  "High-income"
)

# Filter new_data based on location_name
filtered_data <- new_data %>% 
  filter(location_name %in% desired_locations)

# Visualization 2019 health spending per low-middle-high income country
ggplot(data = filtered_data, mapping = aes(x = Spending_Source, y = Health_Expenditure/1000, fill = Spending_Source)) +
  geom_col(position = "dodge") +
  facet_wrap(~ location_name) +
  labs(title = "Health Spending by Financing Source in 2019",
       subtitle = "Per Continent",
       x = "Spending Source", 
       y = "Health Expenditure (in Thousands)", 
       fill = "Spending Source") +
  theme(axis.text.x = element_blank()) +
  scale_fill_brewer(palette = "Set3")
```
```{r, fig.height=27, fig.width=8}
# Cleveland dot plot for countries in 2019
## Year 2019
health_spending_2019 <- health_spending_1995_2019 %>%
  filter(year == 2019)

## Filter on only countries and necessary columns
countries_2019 <- health_spending_2019 %>%
  filter(!(location_name %in% selected_regions | location_name == "Global")) %>%
  select(location_name, location_id, 'the_per_cap_mean', 'ghes_per_cap_mean', 'oop_per_cap_mean', 'ppp_per_cap_mean')

## Do pivot_longer on data
pivot_longer_data <- countries_2019 %>%
   pivot_longer(cols = c('the_per_cap_mean', 'ghes_per_cap_mean', 'oop_per_cap_mean', 'ppp_per_cap_mean'), names_to = "Spending_Source", values_to = "Health_Expenditure")

# Create Cleveland dot plot
ggplot(pivot_longer_data, aes(x = Health_Expenditure, y = fct_reorder(location_name, Health_Expenditure, .desc = FALSE), color = Spending_Source)) +
  geom_point() +
  ggtitle("Financing Sources Countries in 2019") +
  ylab("") +
  scale_x_log10() +  # Add this line for logarithmic scale on the x-axis
  theme_minimal() +
  labs(title = "Health Spending by Financing Source in 2019",
       subtitle = "Per Country",
       x = "Health Expenditure", 
       y = "Countries", 
       fill = "Spending Source") 
```


## Global Health Spending Patterns 2020 to 2050


```{r}
# Degrees of freedom
degrees_of_freedom <- c(1, 5, 10, 20)

# Critical value
critical_value <- 1

# Calculate probability using the chi-squared distribution
probabilities <- pchisq(critical_value, df = degrees_of_freedom)

# Display results
for (i in seq_along(degrees_of_freedom)) {
  cat(sprintf("P(U_%d <= 1) = %.4f\n", degrees_of_freedom[i], probabilities[i]))
}

```


